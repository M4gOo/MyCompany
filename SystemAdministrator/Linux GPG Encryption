
https://www.gnupg.org/gph/en/manual.html#INTRO

confidential data that needs to be transferred to a remote location -> need to encrypt that data.
We also need to decrypt data we received from a remote location in order to understand its content.

Encrypt /home/encrypt_me.txt to /home/encrypted_me.asc

Decrypt /home/decrypt_me.asc to /home/decrypted_me.txt (Passphrase for decryption and encryption is verysecurepassword).


ls
decrypt_me.asc  encrypt_me.txt private_key.asc  public_key.asc

 Import gpg Private & Public key 
 gpg --import public_key.asc
 gpg --import private_key.asc
 
 
verify keys are imported successfully
gpg --list-keys
gpg: directory `/home/natasha/.gnupg' created
gpg: new configuration file `/home/user/.gnupg/gpg.conf' created
gpg: WARNING: options in `/home/user/.gnupg/gpg.conf' are not yet active during this run
->>>>>>>> gpg: keyring `/home/user/.gnupg/pubring.gpg' created
gpg: /home/user/.gnupg/trustdb.gpg: trustdb created



gpg --list-secret-keys
output-> gpg: keyring `/home/user/.gnupg/secring.gpg' created


Will encrypt the file txt in to asc in same folder path 
sudo gpg --encrypt -r email@email.com --armor < encrypt_me.txt  -o encrypted_me.asc
gpg: 865C070D: There is no assurance this key belongs to the named user

pub  2048R/865C070D 2020-01-19 verysecurepassword <email@email.com>
 Primary key fingerprint: FEA8 5011 C456 B5E9 AE5A  516F 8F17 F26E CCE3 AF51
      Subkey fingerprint: 7B4B 5CFC 5E4F B4B6 EEC0  83E5 DD6B 8506 865C 070D

It is NOT certain that the key belongs to the person named
in the user ID.  If you *really* know what you are doing,
you may answer the next question with yes.

Use this key anyway? (y/N) y

